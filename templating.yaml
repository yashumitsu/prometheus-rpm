---
# Use YAML anchors so we can prevent repeating ourselves
anchors:
  default_build_steps: &default_build_steps
    default: '{% extends "default.tpl" %}'
    spec: '{% extends "spec.tpl" %}'
    unit: '{% extends "unit.tpl" %}'
    init: '{% extends "init.tpl" %}'
  default_context: &default_context
    static: &default_static_context
      user: prometheus
      group: prometheus
      package: '%{name}-%{version}.linux-amd64'
      tarball_has_subdirectory: true
      release: 1
      service_opts: []
      environment: {}
      # additional_sources:
      #   - path: example.yml
      #     from_tarball: false # take file from tarball or repository
      #     dest: '%{_sysconfdir}/prometheus/example.yml'
      #     mode: 644           # optional
      #     user: root          # optional
      #     group: root         # optional
      #     config: true        # specify not to override config files
      prep_cmds: []
      build_cmds:
        - /bin/true
      install_cmds: []
      pre_cmds: []
      post_cmds: []
      preun_cmds: []
      postun_cmds: []
      # open_file_limit: 4096   # optionally specify open file limit
    dynamic: &default_dynamic_context
      tarball: '{{URL}}/releases/download/v%{version}/{{package}}.tar.gz'
      sources:
        - '{{tarball}}'
        - autogen_%{name}.unit
        - autogen_%{name}.default
        - autogen_%{name}.init

# Per-package configuration
packages:
  alertmanager:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.28.0
        license: ASL 2.0
        URL: https://github.com/prometheus/alertmanager
        service_opts:
          - --config.file=/etc/prometheus/alertmanager.yml
          - --storage.path=/var/lib/prometheus/alertmanager
        additional_sources:
          - path: amtool
            dest: '%{_bindir}/amtool'
            from_tarball: true
            mode: 755
            config: false
          - path: alertmanager.yml
            dest: '%{_sysconfdir}/prometheus/alertmanager.yml'
            from_tarball: true
            mode: 640
            group: '%{group}'
        open_file_limit: 16384
        summary: Prometheus Alertmanager.
        description: |
          The Alertmanager handles alerts sent by client applications such as the
          Prometheus server. It takes care of deduplicating, grouping, and routing them to
          the correct receiver integration such as email, PagerDuty, or OpsGenie. It also
          takes care of silencing and inhibition of alerts.
  node_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 1.8.2
        license: ASL 2.0
        URL: https://github.com/prometheus/node_exporter
        summary: Prometheus exporter for machine metrics, written in Go with pluggable metric collectors.
        description: |
          Prometheus exporter for hardware and OS metrics exposed by *NIX kernels,
          written in Go with pluggable metric collectors.
  blackbox_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.25.0
        license: ASL 2.0
        URL: https://github.com/prometheus/blackbox_exporter
        service_opts:
          - --config.file=/etc/prometheus/blackbox.yml
        caps: cap_net_raw=ep
        additional_sources:
          - path: blackbox.yml
            dest: '%{_sysconfdir}/prometheus/blackbox.yml'
            from_tarball: true
            mode: 640
            group: '%{group}'
        open_file_limit: 16384
        summary: Blackbox prober exporter
        description: |
          The blackbox exporter allows blackbox probing of endpoints over HTTP, HTTPS,
          DNS, TCP and ICMP.
  sql_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.14.4
        license: MIT
        URL: https://github.com/burningalchemist/sql_exporter
        service_opts:
          - --config.file=/etc/prometheus/sql_exporter.yml
        additional_sources:
          - path: sql_exporter.yml
            dest: '%{_sysconfdir}/prometheus/sql_exporter.yml'
            from_tarball: true
            mode: 640
            group: '%{group}'
          - path: mssql_standard.collector.yml
            dest: '%{_sysconfdir}/prometheus/mssql_standard.collector.yml'
            from_tarball: true
            mode: 640
            group: '%{group}'
        summary: SQL exporter
        description: |
          Database agnostic SQL exporter for Prometheus.
      dynamic:
        <<: *default_dynamic_context
        tarball: '{{URL}}/releases/download/%{version}/{{package}}.tar.gz'
  mysqld_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.16.0
        license: ASL 2.0
        URL: https://github.com/prometheus/mysqld_exporter
        summary: Prometheus exporter for MySQL server metrics.
        description: |
          Prometheus exporter for MySQL server metrics. Supported MySQL versions: 5.5 and up.
          NOTE: Not all collection methods are supported on MySQL < 5.6
  postgres_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.16.0
        license: ASL 2.0
        URL: https://github.com/prometheus-community/postgres_exporter
        user: postgres
        group: postgres
        service_opts:
          - --extend.query-path=/etc/prometheus/postgres_exporter_queries.yaml
        environment:
          DATA_SOURCE_NAME: user=postgres host=/var/run/postgresql/ sslmode=disable
        additional_sources:
          - path: https://raw.githubusercontent.com/prometheus-community/%{name}/v%{version}/queries.yaml
            dest: '%{_sysconfdir}/prometheus/%{name}_queries.yaml'
            from_tarball: false
        summary: Prometheus exporter for PostgreSQL server metrics
        description: |
          Prometheus exporter for PostgreSQL server metrics.
  pgbouncer_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.10.2
        license: MIT
        URL: https://github.com/prometheus-community/pgbouncer_exporter
        user: postgres
        group: postgres
        summary: Prometheus exporter for PgBouncer.
        description: Prometheus exporter for PgBouncer. Exports metrics at 9127/metrics
  elasticsearch_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 1.8.0
        license: ASL 2.0
        URL: https://github.com/prometheus-community/elasticsearch_exporter
        service_opts:
          - --es.uri=http://localhost:9200
        summary: Elasticsearch stats exporter for Prometheus.
        description: |
          Prometheus exporter for various metrics about ElasticSearch, written in Go.
  redis_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      static:
        <<: *default_static_context
        version: 1.67.0
        license: MIT
        summary: Prometheus exporter for Redis server metrics.
        description: Prometheus Exporter for Redis Metrics. Supports Redis 2.x, 3.x, 4.x, 5.x and 6.x
        package: '%{name}-v%{version}.linux-amd64'
        URL: https://github.com/oliver006/redis_exporter
      dynamic:
        <<: *default_dynamic_context
  haproxy_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.15.0
        license: ASL 2.0
        URL: https://github.com/prometheus/haproxy_exporter
        service_opts:
          - --haproxy.scrape-uri=unix:/var/lib/haproxy/stats
        summary: This is a simple server that scrapes HAProxy stats and exports them via HTTP for Prometheus consumption.
        description: This is a simple server that scrapes HAProxy stats and exports them via HTTP for Prometheus consumption.
  kafka_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 1.8.0
        license: ASL 2.0
        URL: https://github.com/danielqsj/kafka_exporter
        summary: Kafka exporter for Prometheus.
        description: Kafka exporter for Prometheus.
  pushgateway:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 1.11.0
        license: ASL 2.0
        URL: https://github.com/prometheus/pushgateway
        summary: Prometheus push acceptor for ephemeral and batch jobs.
        description: |
          The Prometheus Pushgateway exists to allow ephemeral and batch jobs to
          expose their metrics to Prometheus. Since these kinds of jobs may not
          exist long enough to be scraped, they can instead push their metrics to
          a Pushgateway. The Pushgateway then exposes these metrics to Prometheus.
  mongodb_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.43.1
        license: ASL 2.0
        URL: https://github.com/percona/mongodb_exporter
        package: '%{name}-%{version}.linux-amd64'
        summary: A Prometheus exporter for MongoDB including sharding, replication and storage engines
        description: A Prometheus exporter for MongoDB including sharding, replication and storage engines
  statsd_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.28.0
        license: ASL 2.0
        URL: https://github.com/prometheus/statsd_exporter
        summary: Export StatsD metrics in Prometheus format.
        description: |
          Exporter receives StatsD-style metrics and exports them as Prometheus metrics.
  memcached_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.15.0
        license: ASL 2.0
        URL: https://github.com/prometheus/memcached_exporter
        summary: Memcached stats exporter for Prometheus.
        description: |
          The memcached exporter exports metrics from a memcached server for consumption by Prometheus.
  consul_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.13.0
        license: ASL 2.0
        URL: https://github.com/prometheus/consul_exporter
        summary: Consul stats exporter for Prometheus.
        description: |
          Export Consul service health to Prometheus.
  smokeping_prober:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.9.0
        license: ASL 2.0
        URL: https://github.com/SuperQ/smokeping_prober
        service_opts:
          - localhost
        caps: cap_net_raw=ep
        summary: Smokeping-style prober for Prometheus.
        description: |
          The smokeping-style prober sends a series of ICMP (or UDP) pings to a target and records the responses in Prometheus histogram metrics.
  apache_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 1.0.9
        license: MIT
        URL: https://github.com/Lusitaniae/apache_exporter
        summary: Prometheus exporter Apache webserver mertics.
        description: |
          Prometheus exporter for Apache mod_status statistics.
  process_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.8.5
        license: MIT
        URL: https://github.com/ncabatoff/process-exporter
        package: process-exporter-%{version}.linux-amd64
        fix_name: process-exporter
        additional_sources:
          - path: https://raw.githubusercontent.com/ncabatoff/process-exporter/v%{version}/packaging/conf/all.yaml
            dest: '%{_sysconfdir}/prometheus/%{name}.yml'
        service_opts:
          - --config.path=/etc/prometheus/process_exporter.yml
        summary: Process exporter for Prometheus.
        description: |
          Prometheus exporter that mines /proc to report on selected processes.
  ssl_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 2.4.3
        license: ASL 2.0
        URL: https://github.com/ribbybibby/ssl_exporter
        package: '%{name}_%{version}_linux_amd64'
        tarball_has_subdirectory: false
        additional_sources:
          - path: https://raw.githubusercontent.com/ribbybibby/%{name}/v%{version}/examples/%{name}.yaml
            dest: '%{_sysconfdir}/prometheus/%{name}.yml'
        service_opts:
          - --config.file=/etc/prometheus/ssl_exporter.yml
        summary: Prometheus exporter for SSL certificates.
        description: |
          Prometehus exporter that exports metrics for certificates collected from TCP
          probes, local files or Kubernetes secrets. The metrics are labelled with fields
          from the certificate, which allows for informational dashboards and flexible
          alert routing.
  artifactory_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 1.16.0
        license: ASL 2.0
        URL: https://github.com/peimanja/artifactory_exporter
        package: '%{name}-v%{version}-linux-amd64'
        tarball_has_subdirectory: false
        environment:
          ARTI_USERNAME: username
          ARTI_PASSWORD: password
        summary: Prometheus exporter for JFrog Artifactory stats.
        description: Collects metrics about an Artifactory system
  cadvisor:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.49.2
        license: ASL 2.0
        URL: https://github.com/google/cadvisor
        user: root
        group: root
        service_opts:
          - --port=4194
          - --logtostderr=true
        summary: cAdvisor exposes container metrics
        description: |
          cAdvisor (Container Advisor) provides container users an understanding of the resource usage and performance characteristics of their running containers.
        package: '%{name}-v%{version}-linux-amd64'
      dynamic:
        <<: *default_dynamic_context
        tarball: '{{URL}}/releases/download/v%{version}/{{package}}'
  bird_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 1.4.3
        license: MIT
        URL: https://github.com/czerwonk/bird_exporter
        user: bird
        group: bird
        package: '%{name}_%{version}_linux_amd64'
        tarball_has_subdirectory: false
        summary: Bird routing daemon exporter
        description: |
          Metric exporter for bird routing daemon.
      dynamic:
        <<: *default_dynamic_context
        tarball: '{{URL}}/releases/download/%{version}/{{package}}.tar.gz'
  promxy:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.0.92
        license: MIT
        URL: https://github.com/jacksontj/promxy
        service_opts:
          - --config=/etc/promxy/config.yaml
        summary: Prometheus aggregating proxy
        description: |
          Promxy is a prometheus proxy that makes many shards of prometheus appear as a single API endpoint to the user.
        package: '%{name}-v%{version}-linux-amd64'
        additional_sources:
          - path: https://raw.githubusercontent.com/jacksontj/%{name}/v%{version}/cmd/promxy/config.yaml
            dest: '%{_sysconfdir}/promxy/config.yaml'
            from_tarball: false
      dynamic:
        <<: *default_dynamic_context
        tarball: '{{URL}}/releases/download/v%{version}/{{package}}'
